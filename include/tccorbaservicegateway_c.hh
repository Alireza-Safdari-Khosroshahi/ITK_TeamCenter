// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a_p3
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be\be_codegen.cpp:150

#ifndef _TAO_IDL_D__WORKDIR_TC101W0604_64_WNTX64_DRV_SERVER_TCGATEWAY_TCCORBASERVICEGATEWAY_C_6ZAX1P_H_
#define _TAO_IDL_D__WORKDIR_TC101W0604_64_WNTX64_DRV_SERVER_TCGATEWAY_TCCORBASERVICEGATEWAY_C_6ZAX1P_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tcconstants_c.hh"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a_p3
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO DSPEC_DLL

// TAO_IDL - Generated from 
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:162
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

typedef TcByteSeq_t TcString_t;
typedef TcByteSeq_t_var TcString_t_var;
typedef TcByteSeq_t_out TcString_t_out;

// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

typedef TcString_t tc_uid_t;
typedef TcString_t_var tc_uid_t_var;
typedef TcString_t_out tc_uid_t_out;

// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

typedef TcString_t TcMimeMediaType_t;
typedef TcString_t_var TcMimeMediaType_t_var;
typedef TcString_t_out TcMimeMediaType_t_out;

// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

typedef TcString_t TcMimeMediaSubtype_t;
typedef TcString_t_var TcMimeMediaSubtype_t_var;
typedef TcString_t_out TcMimeMediaSubtype_t_out;

// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:462

typedef TcString_t TcMimeMediaTypeParam_t;
typedef TcString_t_var TcMimeMediaTypeParam_t_var;
typedef TcString_t_out TcMimeMediaTypeParam_t_out;

// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:509

typedef TcMimeType_s TcMimeType_t;
typedef TcMimeType_s_var TcMimeType_t_var;
typedef TcMimeType_s_out TcMimeType_t_out;

// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:509

typedef TcPropertySet_s TcPropertySet_t;
typedef TcPropertySet_s_var TcPropertySet_t_var;
typedef TcPropertySet_s_out TcPropertySet_t_out;

// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:555

typedef TcStringValue_u TcStringValue_t;
typedef TcStringValue_u_var TcStringValue_t_var;
typedef TcStringValue_u_out TcStringValue_t_out;

// TAO_IDL - Generated from
// be\be_interface.cpp:784

#if !defined (_TCCORBASERVICEGATEWAY__VAR_OUT_CH_)
#define _TCCORBASERVICEGATEWAY__VAR_OUT_CH_

class TcCorbaServiceGateway;
typedef TcCorbaServiceGateway *TcCorbaServiceGateway_ptr;

typedef
  TAO_Objref_Var_T<
      TcCorbaServiceGateway
    >
  TcCorbaServiceGateway_var;

typedef
  TAO_Objref_Out_T<
      TcCorbaServiceGateway
    >
  TcCorbaServiceGateway_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:45

class DSPEC_DLL TcCorbaServiceGateway
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<TcCorbaServiceGateway>;

  // TAO_IDL - Generated from
  // be\be_type.cpp:307
  
  typedef TcCorbaServiceGateway_ptr _ptr_type;
  typedef TcCorbaServiceGateway_var _var_type;
  typedef TcCorbaServiceGateway_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static TcCorbaServiceGateway_ptr _duplicate (TcCorbaServiceGateway_ptr obj);

  static void _tao_release (TcCorbaServiceGateway_ptr obj);

  static TcCorbaServiceGateway_ptr _narrow (::CORBA::Object_ptr obj);
  static TcCorbaServiceGateway_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static TcCorbaServiceGateway_ptr _nil (void);

  virtual ::TcString_t * invokeMethod (
    const char * service,
    const char * method,
    const ::TcString_t & args);

  virtual char * getPDIServerIOR (
    void);

  virtual char * getTcServerIOR (
    void);

  virtual char * getTcServerMgmtIOR (
    void);

  virtual char * getEnvironmentVariable (
    const char * variableName);

  virtual void setPoolManagerIOR (
    const char * managerIOR);

  virtual void shutdown (
    void);

  // TAO_IDL - Generated from
  // d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:156

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

private:
  TAO::Collocation_Proxy_Broker *the_TAO_TcCorbaServiceGateway_Proxy_Broker_;

protected:
  // Concrete interface only.
  TcCorbaServiceGateway (void);

  // These methods traverse the inheritance tree and set the
  // parents piece of the given class in the right mode.
  virtual void TcCorbaServiceGateway_setup_collocation (void);

  // Concrete non-local interface only.
  TcCorbaServiceGateway (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  TcCorbaServiceGateway (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~TcCorbaServiceGateway (void);

private:
  // Private and unimplemented for concrete interfaces.
  TcCorbaServiceGateway (const TcCorbaServiceGateway &);

  void operator= (const TcCorbaServiceGateway &);
};

// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:39

extern DSPEC_DLL ::CORBA::TypeCode_ptr const _tc_TcCorbaServiceGateway;

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_TCCORBASERVICEGATEWAY__ARG_TRAITS_)
#define _TCCORBASERVICEGATEWAY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::TcCorbaServiceGateway>
    : public
        Object_Arg_Traits_T<
            ::TcCorbaServiceGateway_ptr,
            ::TcCorbaServiceGateway_var,
            ::TcCorbaServiceGateway_out,
            TAO::Objref_Traits<TcCorbaServiceGateway>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:204

extern DSPEC_DLL
TAO::Collocation_Proxy_Broker *
(*_TAO_TcCorbaServiceGateway_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj);

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_TCCORBASERVICEGATEWAY__TRAITS_)
#define _TCCORBASERVICEGATEWAY__TRAITS_

  template<>
  struct DSPEC_DLL Objref_Traits< ::TcCorbaServiceGateway>
  {
    static ::TcCorbaServiceGateway_ptr duplicate (
        ::TcCorbaServiceGateway_ptr p);
    static void release (
        ::TcCorbaServiceGateway_ptr p);
    static ::TcCorbaServiceGateway_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::TcCorbaServiceGateway_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

DSPEC_DLL void operator<<= (::CORBA::Any &, TcCorbaServiceGateway_ptr); // copying
DSPEC_DLL void operator<<= (::CORBA::Any &, TcCorbaServiceGateway_ptr *); // non-copying
DSPEC_DLL ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TcCorbaServiceGateway_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\_tao_work\ace_wrappers_dynamic_x64_release_vc10\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:47

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

DSPEC_DLL ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TcCorbaServiceGateway_ptr );
DSPEC_DLL ::CORBA::Boolean operator>> (TAO_InputCDR &, TcCorbaServiceGateway_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_codegen.cpp:1581
#if defined (__ACE_INLINE__)
#include "tccorbaservicegateway_c.i"
#endif /* defined INLINE */

#endif /* ifndef */

