/* @<COPYRIGHT_START>@
 ==================================================
 Copyright 2007.
 Siemens Product Lifecycle Management Software Inc.
 All Rights Reserved.
 ==================================================
 @<COPYRIGHT_END>@ */


/**
    @file

    This file contains the published identifiers of error codes that can be
    generated by this module. Obtaining and using the numeric values of these
    manifest constants is not supported. We reserve the right to change the
    actual values as necessary.

*/


#ifndef CE_ERRORS_H
#define CE_ERRORS_H

#ifndef EMH_CONST_H
    #include <common/emh_const.h>
#endif

#include <ce/libce_exports.h>

/**
    @defgroup CE_ERRORS Errors
    @ingroup CE
    @{
*/

#define CE_ERROR_BASE                       EMH_CE_error_base

#define CE_init_error                       (CE_ERROR_BASE + 1)
#define CE_no_load_usersession_object       (CE_ERROR_BASE + 2)
#define CE_no_type                          (CE_ERROR_BASE + 3)
#define CE_no_properties                    (CE_ERROR_BASE + 4)
#define CE_invalid_data_type                (CE_ERROR_BASE + 5)
#define CE_data_type_not_supported          (CE_ERROR_BASE + 6)
#define CE_argument_number_out_of_range     (CE_ERROR_BASE + 7)
#define CE_invalid_argument_type            (CE_ERROR_BASE + 8)
#define CE_invalid_global_operation         (CE_ERROR_BASE + 9)
#define CE_data_type_mismatch               (CE_ERROR_BASE + 10)
#define CE_invalid_condition_tag            (CE_ERROR_BASE + 11)
#define CE_invalid_condition_parameter_tag  (CE_ERROR_BASE + 12)
#define CE_no_rules_engine_error            (CE_ERROR_BASE + 13)
#define CE_defmodule_not_found_error        (CE_ERROR_BASE + 14)
#define CE_missing_parm_specifier           (CE_ERROR_BASE + 15)
#define CE_missing_condition_name           (CE_ERROR_BASE + 16)
#define CE_missing_input_file               (CE_ERROR_BASE + 17)
#define CE_system_init_error                (CE_ERROR_BASE + 18)
#define CE_init_text_services_error         (CE_ERROR_BASE + 19)
#define CE_login_error                      (CE_ERROR_BASE + 20)
#define CE_invalid_input_values             (CE_ERROR_BASE + 21)
#define CE_failed_ITK_exit_module           (CE_ERROR_BASE + 22)
#define CE_unsupported_parameter_type       (CE_ERROR_BASE + 23)
#define CE_type_does_not_exist              (CE_ERROR_BASE + 24)
#define CE_deep_copy_rule_not_found         (CE_ERROR_BASE + 25)
#define CE_condition_not_found              (CE_ERROR_BASE + 26)
#define CE_invalid_object_operation         (CE_ERROR_BASE + 27)
#define CE_missing_required_parameter       (CE_ERROR_BASE + 28)
#define CE_no_admin_privilege               (CE_ERROR_BASE + 29)
#define CE_file_not_found_error             (CE_ERROR_BASE + 30)
#define CE_multi_CLIPS_rules_datasets_error (CE_ERROR_BASE + 31)
#define CE_CLIPS_dataset_checked_out_error  (CE_ERROR_BASE + 32)
#define CE_cant_add_to_cache                (CE_ERROR_BASE + 33)
#define CE_load_library_image_error         (CE_ERROR_BASE + 34)
#define CE_find_symbol_in_image_error       (CE_ERROR_BASE + 35)
#define CE_invalid_pattern                  (CE_ERROR_BASE + 36)
#define CE_invalid_operation_return_value   (CE_ERROR_BASE + 37)

/**
 * The description of the unsatisfied condition is: %1$.
 */
#define CE_store_description_value          (CE_ERROR_BASE + 38)
/** @} */

#include <ce/libce_undef.h>
#endif
