/* 
 Copyright 2012 Siemens Product Lifecycle Management Software Inc. All Rights Reserved.
 ==================================================
 Copyright 2012
 Siemens Product Lifecycle Management Software Inc.
 All Rights Reserved.
 ==================================================
 Copyright 2012 Siemens Product Lifecycle Management Software Inc. All Rights Reserved.

 ==================================================

  Auto-generated source from Teamcenter Data Model.
                 DO NOT EDIT

 ==================================================
*/

#ifndef TEAMCENTER_SOA_CLIENT_MODEL_MEVIEWLINE_HXX
#define TEAMCENTER_SOA_CLIENT_MODEL_MEVIEWLINE_HXX

#include <new>
#include <teamcenter/soa/common/MemoryManager.hxx>
#include <teamcenter/soa/common/DateTime.hxx>
#include <teamcenter/soa/client/ModelObject.hxx>

#include <teamcenter/soa/client/model/MECfgLine.hxx>

#include <teamcenter/soa/client/SoaClientMngdExports.h>

namespace Teamcenter
{
    namespace Soa
    {
        namespace Client
        {
            namespace Model
            {


class TCSOACLIENTMNGD_API MEViewLine : public Teamcenter::Soa::Client::Model::MECfgLine
{
public:
    const std::string& get_bl_connected_lines();
    const std::string& get_bl_revision();
    const std::string& get_bl_ic_intent_list();
    const std::string& get_bl_formatted_ancestor_name();
    const std::string& get_bl_quick_num_children();
    const std::string& get_bl_is_variant();
    const std::string& get_bl_fg_colour_int_as_str();
    const std::string& get_bl_has_legacy_occ_effectivity();
    const std::string& get_bl_is_packed();
    const std::string& get_bl_item();
    const std::string& get_bl_ic_state();
    const std::string& get_bl_ices_of_occ();
    const std::string& get_bl_has_children();
    const std::string& get_bl_config_string();
    const std::string& get_bl_jt_override_children();
    const std::string& get_bl_ic_list();
    const std::string& get_bl_network_viewer_route();
    const std::string& get_bl_remote_obj_pub_rec();
    const std::string& get_bl_implementedBy_lines_tags();
    const std::string& get_bl_num_ports();
    const std::string& get_bl_real_occurrence();
    const std::string& get_bl_preferred_abs_occ_id();
    const std::string& get_bl_gde_abs_name();
    const std::string& get_bl_formatted_title();
    const std::string& get_bl_all_nves();
    const std::string& get_bl_all_authorised_nves();
    const std::string& get_bl_formula();
    const std::string& get_bl_all_mandatory_splitting_nves();
    const std::string& get_bl_nve_meta_expression();
    const std::string& get_bl_remote_object();
    const std::string& get_bl_all_splitting_nves();
    const std::string& get_bl_changed_by_current_ic();
    const std::string& get_bl_used_arrangement_name();
    const std::string& get_bl_signal_process_variable();
    const std::string& get_bl_is_occ_suppressed();
    const std::string& get_bl_is_dummy_parent();
    const std::string& get_bl_line_name();
    const std::string& get_bl_realizedBy_lines();
    const std::string& get_bl_appearance_uid();
    const std::string& get_bl_apn_uid_in_topline_context();
    const std::string& get_bl_sequence_no();
    const std::string& get_bl_is_precise();
    const std::string& get_bl_has_substitutes();
    const std::string& get_bl_appearance_validity_in();
    const std::string& get_bl_signal_associated_system_tags();
    const std::string& get_bl_parent();
    const std::string& get_bl_formatted_view_type();
    const std::string& get_bl_has_unified_occ_effectivity();
    const std::string& get_bl_packed_lines();
    const std::string& get_bl_variant_state();
    const std::string& get_bl_is_classified();
    const std::string& get_bl_quantity_change();
    const std::string& get_bl_bomview();
    const std::string& get_bl_has_date_effectivity();
    const std::string& get_bl_gatewayOf_lines_tags();
    const std::string& get_bl_child_lines();
    const std::string& get_bl_children_expanded();
    const std::string& get_bl_implementedBy_lines();
    const std::string& get_bl_occurrence_name();
    const std::string& get_bl_embeds_lines_tags();
    const std::string& get_bl_indented_title();
    const std::string& get_bl_properties_in_context();
    const std::string& get_bl_position_designator();
    const std::string& get_bl_aligned_part_occs();
    const std::string& get_bl_aligned_act_occs();
    const std::string& get_bl_is_published();
    const std::string& get_bl_is_prev_rev_published();
    const std::string& get_bl_all_child_lines();
    const std::string& get_bl_num_children();
    const std::string& get_bl_is_suppressed();
    const std::string& get_bl_has_trace_link();
    const std::string& get_bl_realizedBy_lines_tags();
    const std::string& get_bl_occ_effectivity();
    const std::string& get_bl_occ_is_precise();
    const std::string& get_bl_connected_apns();
    const std::string& get_bl_is_link_out_of_sync();
    const std::string& get_bl_rev_rule_modifier();
    const std::string& get_bl_is_occ_suppression_constrained();
    const std::string& get_bl_rev_rule_parent_modifier();
    const std::string& get_bl_occurrence();
    const std::string& get_bl_occurrence_uid();
    const std::string& get_bl_predecessor_lines();
    const std::string& get_bl_is_orphan();
    const std::string& get_bl_affecting_ice_types();
    const std::string& get_bl_property_context_tags();
    const std::string& get_bl_is_vi();
    const std::string& get_bl_ic_release_status_list();
    const std::string& get_bl_signal_redundant();
    const std::string& get_bl_appearance_validity_out();
    const std::string& get_bl_plmxml_occ_xform();
    const std::string& get_bl_visible_parent();
    const std::string& get_bl_ic_effectivity();
    const std::string& get_bl_variant_condition();
    const std::string& get_bl_used_arrangement();
    const std::string& get_bl_routedBy_lines_tags();
    const std::string& get_bl_embeds_lines();
    const std::string& get_bl_config_ic_list();
    const std::string& get_bl_absocc_uid_in_topline_context();
    const std::string& get_bl_signal_value();
    const std::string& get_bl_dataset_attachments();
    const std::string& get_bl_quantity();
    const std::string& get_bl_part_source();
    const std::string& get_bl_uom();
    const std::string& get_bl_ref_designator();
    const std::string& get_bl_child_item();
    const std::string& get_bl_compare_change();
    const std::string& get_bl_gc_id();
    const std::string& get_bl_bomview_uid();
    const std::string& get_bl_weld_feature_form();
    const std::string& get_bl_is_all_history_line();
    const std::string& get_bl_occ_date_range();
    const std::string& get_bl_is_pending_cut();
    const std::string& get_bl_all_notes();
    const std::string& get_bl_abs_occ_id();
    const std::string& get_bl_line_object();
    const std::string& get_bl_appearance();
    const std::string& get_bl_revision_effectivity();
    const std::string& get_bl_line_object_class();
    const std::string& get_bl_pack_count();
    const std::string& get_bl_jt_dataset_tag();
    const std::string& get_bl_plmxml_abs_xform();
    const std::string& get_bl_gde_bomview_rev();
    const std::string& get_bl_window();
    const std::string& get_bl_condition_tag();
    const std::string& get_bl_variant_state_int();
    const std::string& get_bl_formatted_parent_name();
    const std::string& get_bl_forced_configuration();
    const std::string& get_bl_part_numbers();
    const std::string& get_bl_view_type();
    const std::string& get_bl_connected_lines_tags();
    const std::string& get_bl_dependentOn_lines();
    const std::string& get_bl_abs_xform_matrix();
    const std::string& get_bl_has_module();
    const std::string& get_bl_has_global_alternates();
    const std::string& get_bl_occ_xform_matrix();
    const std::string& get_bl_dependentOn_lines_tags();
    const std::string& get_bl_substitute();
    const std::string& get_bl_signal_associated_system();
    const std::string& get_bl_is_shown_in_tree();
    const std::string& get_bl_compare_change_int();
    const std::string& get_bl_removed_by_current_ic();
    const std::string& get_bl_bomview_rev();
    const std::string& get_bl_has_remove_ices();
    const std::string& get_bl_revision_change();
    const std::string& get_bl_level_starting_0();
    const std::string& get_bl_load_state();
    const std::string& get_bl_level_starting_1();
    const std::string& get_bl_has_occ_effectivity();
    const std::string& get_bl_is_shown_in_viewer();
    const std::string& get_bl_attachments();
    const std::string& get_bl_has_add_ices();
    const std::string& get_bl_property_ic_context_types();
    const std::string& get_bl_signal_process_variable_tag();
    const std::string& get_bl_is_last_child();
    const std::string& get_bl_connected_to_absName();
    const std::string& get_bl_usage_address();
    const std::string& get_bl_jt_refsetname();
    const std::string& get_bl_absocc_generator();
    const std::string& get_bl_has_occupancy_data();
    const std::string& get_bl_is_occ_configured();
    const std::string& get_bl_device_to_connector_lines_tags();
    const std::string& get_bl_process_variable_value();
    const std::string& get_bl_real_quantity();
    const std::string& get_bl_added_by_current_ic();
    const std::string& get_bl_pos_ref();
    const std::string& get_bl_gatewayOf_lines();
    const std::string& get_bl_appearance_path_node();
    const std::string& get_bl_is_item_configured();
    const std::string& get_bl_formatted_quantity();
    const std::string& get_bl_bg_colour_int_as_str();
    const std::string& get_bl_routedBy_lines();
    const std::string& get_bl_pack_master();
    const std::string& get_bl_abs_occ_all_ids();
    const std::string& get_bl_is_occ_position_constrained();
    const std::string& get_bl_note_types();
    const std::string& get_bl_signal_redundant_tags();
    const std::string& get_bl_fulltext_body_cleartext();
    const std::string& get_bl_occ_type();
    const std::string& get_bl_is_publish_link_source();
    const std::string& get_bl_is_publish_link_target();
    const std::string& get_bl_data_published_from_source();
    const std::string& get_bl_is_designed_in_place();
    const std::string& get_bl_allFlags();
    const std::string& get_bl_pending_edit_status();
    const std::string& get_bl_property_overrides();
    const std::string& get_bl_req_pos_design();
    const std::string& get_bl_clone_stable_occurrence_id();
    const std::string& get_bl_substitute_list();
    const std::string& get_bl_proxy_shape_data_flag();
    const std::string& get_bl_ices_of_pred_reln();
    const std::string& get_bl_plmxml_def_abs_xform();
    const std::string& get_bl_plmxml_def_occ_xform();
    const std::string& get_bl_occ_assigned();
    const std::string& get_bl_bounding_boxes();
    const std::string& get_bl_rev_VMRepresents();
    const std::string& get_bl_rev_vendor_parts();
    const std::string& get_bl_jt_hint_contents();
    const std::string& get_bl_has_attached_notes();
    const std::string& get_bl_window_is_BOPWin();
    const std::string& get_bl_occ_int_order_no();
    const std::string& get_fnd0bl_has_active_markup();
    const std::string& get_fnd0bl_active_markup();
    const std::string& get_fnd0bl_active_changes();
    const std::string& get_fnd0bl_markup_type();
    const std::string& get_fnd0bl_markup_prop_names();
    const std::string& get_fnd0bl_markup_prop_values();
    const std::string& get_fnd0bl_markup_replace_obj();
    const std::string& get_fnd0bl_markup_subs_objs_add();
    const std::string& get_fnd0bl_markup_subs_objs_del();
    const std::string& get_fnd0bl_markup_add_objs();
    const std::string& get_fnd0bl_ac_check_result();
    const std::string& get_fnd0bl_assigned_as();
    const std::string& get_fnd0bl_real_quantity();
    const std::string& get_fnd0bl_is_filtered();
    const std::string& get_fnd0bl_has_trace_link();
    const std::string& get_fnd0bl_defining_objects();
    const std::string& get_fnd0bl_complying_objects();
    const std::string& get_fnd0bl_sub_name_compare();
    const std::string& get_fnd0bl_sub_id_compare();
    const std::string& get_fnd0bl_is_substitute();
    const std::string& get_fnd0bl_is_mono_override();
    const std::string& get_fnd0bl_is_mono_present();
    bool get_me_vl_jt_override_children();
    const std::string& get_me_vl_xform_matrix();
    Teamcenter::Soa::Common::AutoPtr<Teamcenter::Soa::Client::ModelObject>  get_me_vl_jt_dataset_tag();
    const std::string& get_me_vl_jt_refset_name();
    const std::string& get_me_vl_quantity();
    Teamcenter::Soa::Common::AutoPtr<Teamcenter::Soa::Client::ModelObject>  get_me_vl_item_rev();
    const std::string& get_me_vl_bg_colour_int_as_str();
    const std::string& get_bl_arch_hint_GPA();
    const std::string& get_bl_item_item_id();
    const std::string& get_bl_item_bom_view_tags();
    const std::string& get_bl_item_item_master_tag();
    const std::string& get_bl_item_fnd0OriginalLocationCode();
    const std::string& get_bl_item_is_configuration_item();
    const std::string& get_bl_item_has_variant_module();
    const std::string& get_bl_item_is_vi();
    const std::string& get_bl_item_global_alt_list();
    const std::string& get_bl_item_preferred_global_alt();
    const std::string& get_bl_item_fnd0is_monolithic();
    const std::string& get_bl_item_configuration_object_tag();
    const std::string& get_bl_item_uom_tag();
    const std::string& get_bl_item_acl_bits();
    const std::string& get_bl_item_creation_date();
    const std::string& get_bl_item_archive_date();
    const std::string& get_bl_item_last_mod_date();
    const std::string& get_bl_item_backup_date();
    const std::string& get_bl_item_owning_group();
    const std::string& get_bl_item_last_mod_user();
    const std::string& get_bl_item_owning_user();
    const std::string& get_bl_item_timestamp();
    const std::string& get_bl_item_pid();
    const std::string& get_bl_item_object_properties();
    const std::string& get_bl_item_lsd();
    const std::string& get_bl_item_owning_site();
    const std::string& get_bl_item_object_name();
    const std::string& get_bl_item_object_desc();
    const std::string& get_bl_item_object_type();
    const std::string& get_bl_item_object_application();
    const std::string& get_bl_item_revision_number();
    const std::string& get_bl_item_revision_limit();
    const std::string& get_bl_item_process_stage_list();
    const std::string& get_bl_item_date_released();
    const std::string& get_bl_item_ip_classification();
    const std::string& get_bl_item_license_list();
    const std::string& get_bl_item_gov_classification();
    const std::string& get_bl_item_ead_paragraph();
    const std::string& get_bl_item_active_seq();
    const std::string& get_bl_item_release_status_list();
    const std::string& get_bl_item_wso_thread();
    const std::string& get_bl_item_owning_organization();
    const std::string& get_bl_item_project_list();
    const std::string& get_bl_item_owning_project();
    const std::string& get_bl_item_object_string();
    const std::string& get_bl_item_fnd0objectId();
    const std::string& get_bl_item_fnd0mfkinfo();
    const std::string& get_bl_item_release_statuses();
    const std::string& get_bl_item_reservation();
    const std::string& get_bl_item_publication_sites();
    const std::string& get_bl_item_export_sites();
    const std::string& get_bl_item_project_ids();
    const std::string& get_bl_item_last_release_status();
    const std::string& get_bl_item_current_job();
    const std::string& get_bl_item_current_desc();
    const std::string& get_bl_item_checked_out_change_id();
    const std::string& get_bl_item_has_trace_link();
    const std::string& get_bl_item_process_stage();
    const std::string& get_bl_item_external_apps();
    const std::string& get_bl_item_projects_list();
    const std::string& get_bl_item_ics_subclass_name();
    const std::string& get_bl_item_ics_classified();
    const std::string& get_bl_item_based_on();
    const std::string& get_bl_item_item_revision();
    const std::string& get_bl_item_change();
    const std::string& get_bl_item_checked_out_user();
    const std::string& get_bl_item_is_modifiable();
    const std::string& get_bl_item_protection();
    const std::string& get_bl_item_current_name();
    const std::string& get_bl_item_proj_assign_mod_date();
    const std::string& get_bl_item_expl_checkout();
    const std::string& get_bl_item_checked_out();
    const std::string& get_bl_item_checked_out_date();
    const std::string& get_bl_item_ip_logged();
    const std::string& get_bl_item_user_can_unmanage();
    const std::string& get_bl_item_null_logical();
    const std::string& get_bl_item_null_string();
    const std::string& get_bl_item_fnd0defining_objects();
    const std::string& get_bl_item_fnd0complying_objects();
    const std::string& get_bl_item_fnd0IsCheckoutable();
    const std::string& get_bl_item_fnd0WorkflowAuditLogs();
    const std::string& get_bl_item_fnd0GeneralAuditLogs();
    const std::string& get_bl_item_fnd0LicenseExportAuditLogs();
    const std::string& get_bl_item_IMAN_based_on();
    const std::string& get_bl_item_FND_TraceLink();
    const std::string& get_bl_item_Fnd0ShapeRelation();
    const std::string& get_bl_item_Fnd0DiagramTmplRelation();
    const std::string& get_bl_item_Fnd0Diagram_Attaches();
    const std::string& get_bl_item_Fnd0DiagramSnapshot();
    const std::string& get_bl_item_more_revisions();
    const std::string& get_bl_item_revision_list();
    const std::string& get_bl_item_IMAN_master_form();
    const std::string& get_bl_item_EC_addressed_by_rel();
    const std::string& get_bl_item_EC_solution_item_rel();
    const std::string& get_bl_item_id_dispdefault();
    const std::string& get_bl_item_generic_component_object_string();
    const std::string& get_bl_item_TC_Generic_Architecture();
    const std::string& get_bl_item_IMAN_MEView();
    const std::string& get_bl_item_IMAN_external_object_link();
    const std::string& get_bl_item_altid_list();
    const std::string& get_bl_item_has_module();
    const std::string& get_bl_item_has_global_alternates();
    const std::string& get_bl_item_EC_reference_item_rel();
    const std::string& get_bl_item_EC_problem_item_rel();
    const std::string& get_bl_item_has_variants();
    const std::string& get_bl_item_TC_CAE_Defining();
    const std::string& get_bl_item_IMAN_classification();
    const std::string& get_bl_item_IMAN_vi_sos();
    const std::string& get_bl_item_IMAN_Rendering();
    const std::string& get_bl_item_IMAN_aliasid();
    const std::string& get_bl_item_is_linked_to_generic_component();
    const std::string& get_bl_item_TC_CAE_Source();
    const std::string& get_bl_item_IMAN_manifestation();
    const std::string& get_bl_item_IMAN_ic_intent();
    const std::string& get_bl_item_displayable_revisions();
    const std::string& get_bl_item_TC_CAE_Target();
    const std::string& get_bl_item_TC_WorkContext_Relation();
    const std::string& get_bl_item_IMAN_reference();
    const std::string& get_bl_item_is_variant_item();
    const std::string& get_bl_item_TC_CAE_Results();
    const std::string& get_bl_item_EC_snapshot_rel();
    const std::string& get_bl_item_EC_affected_item_rel();
    const std::string& get_bl_item_current_id();
    const std::string& get_bl_item_TC_AuditLog();
    const std::string& get_bl_item_IMAN_requirement();
    const std::string& get_bl_item_TC_CAE_Criteria();
    const std::string& get_bl_item_TC_CAE_Include();
    const std::string& get_bl_item_TC_CAE_Param();
    const std::string& get_bl_item_TC_sst_record();
    const std::string& get_bl_item_ContactInCompany();
    const std::string& get_bl_item_LocationInCompany();
    const std::string& get_bl_item_VisItemRevCreatedSnapshot2D();
    const std::string& get_bl_item_Fnd0ListsCustomNotes();
    const std::string& get_bl_item_Fnd0ListsParamReqments();
    const std::string& get_bl_item_Fnd0StruObjAttrOverride();
    const std::string& get_bl_item_current_id_context();
    const std::string& get_bl_item_fnd0StructureAuditLogs();
    const std::string& get_bl_item_fnd0VariantNamespace();
    const std::string& get_bl_item_fnd0PartIdentifier();
    const std::string& get_bl_rev_acl_bits();
    const std::string& get_bl_rev_creation_date();
    const std::string& get_bl_rev_archive_date();
    const std::string& get_bl_rev_last_mod_date();
    const std::string& get_bl_rev_backup_date();
    const std::string& get_bl_rev_owning_group();
    const std::string& get_bl_rev_last_mod_user();
    const std::string& get_bl_rev_owning_user();
    const std::string& get_bl_rev_timestamp();
    const std::string& get_bl_rev_pid();
    const std::string& get_bl_rev_object_properties();
    const std::string& get_bl_rev_lsd();
    const std::string& get_bl_rev_owning_site();
    const std::string& get_bl_rev_object_name();
    const std::string& get_bl_rev_object_desc();
    const std::string& get_bl_rev_object_type();
    const std::string& get_bl_rev_object_application();
    const std::string& get_bl_rev_revision_number();
    const std::string& get_bl_rev_revision_limit();
    const std::string& get_bl_rev_process_stage_list();
    const std::string& get_bl_rev_date_released();
    const std::string& get_bl_rev_ip_classification();
    const std::string& get_bl_rev_license_list();
    const std::string& get_bl_rev_gov_classification();
    const std::string& get_bl_rev_ead_paragraph();
    const std::string& get_bl_rev_active_seq();
    const std::string& get_bl_rev_release_status_list();
    const std::string& get_bl_rev_wso_thread();
    const std::string& get_bl_rev_owning_organization();
    const std::string& get_bl_rev_project_list();
    const std::string& get_bl_rev_owning_project();
    const std::string& get_bl_rev_item_revision_id();
    const std::string& get_bl_rev_item_master_tag();
    const std::string& get_bl_rev_has_variant_module();
    const std::string& get_bl_rev_items_tag();
    const std::string& get_bl_rev_sequence_id();
    const std::string& get_bl_rev_sequence_limit();
    const std::string& get_bl_rev_sequence_anchor();
    const std::string& get_bl_rev_fnd0CurrentLocationCode();
    const std::string& get_bl_rev_structure_revisions();
    const std::string& get_bl_rev_declared_options();
    const std::string& get_bl_rev_used_options();
    const std::string& get_bl_rev_variant_expression_block();
    const std::string& get_bl_rev_gde_bvr_list();
    const std::string& get_bl_rev_object_string();
    const std::string& get_bl_rev_fnd0objectId();
    const std::string& get_bl_rev_fnd0mfkinfo();
    const std::string& get_bl_rev_release_statuses();
    const std::string& get_bl_rev_reservation();
    const std::string& get_bl_rev_publication_sites();
    const std::string& get_bl_rev_export_sites();
    const std::string& get_bl_rev_project_ids();
    const std::string& get_bl_rev_last_release_status();
    const std::string& get_bl_rev_current_job();
    const std::string& get_bl_rev_current_desc();
    const std::string& get_bl_rev_checked_out_change_id();
    const std::string& get_bl_rev_has_trace_link();
    const std::string& get_bl_rev_process_stage();
    const std::string& get_bl_rev_external_apps();
    const std::string& get_bl_rev_projects_list();
    const std::string& get_bl_rev_ics_subclass_name();
    const std::string& get_bl_rev_ics_classified();
    const std::string& get_bl_rev_based_on();
    const std::string& get_bl_rev_item_revision();
    const std::string& get_bl_rev_change();
    const std::string& get_bl_rev_checked_out_user();
    const std::string& get_bl_rev_is_modifiable();
    const std::string& get_bl_rev_protection();
    const std::string& get_bl_rev_current_name();
    const std::string& get_bl_rev_proj_assign_mod_date();
    const std::string& get_bl_rev_expl_checkout();
    const std::string& get_bl_rev_checked_out();
    const std::string& get_bl_rev_checked_out_date();
    const std::string& get_bl_rev_ip_logged();
    const std::string& get_bl_rev_user_can_unmanage();
    const std::string& get_bl_rev_null_logical();
    const std::string& get_bl_rev_null_string();
    const std::string& get_bl_rev_fnd0defining_objects();
    const std::string& get_bl_rev_fnd0complying_objects();
    const std::string& get_bl_rev_fnd0IsCheckoutable();
    const std::string& get_bl_rev_fnd0WorkflowAuditLogs();
    const std::string& get_bl_rev_fnd0GeneralAuditLogs();
    const std::string& get_bl_rev_fnd0LicenseExportAuditLogs();
    const std::string& get_bl_rev_IMAN_based_on();
    const std::string& get_bl_rev_FND_TraceLink();
    const std::string& get_bl_rev_Fnd0ShapeRelation();
    const std::string& get_bl_rev_Fnd0DiagramTmplRelation();
    const std::string& get_bl_rev_Fnd0Diagram_Attaches();
    const std::string& get_bl_rev_Fnd0DiagramSnapshot();
    const std::string& get_bl_rev_IMAN_UG_promotion();
    const std::string& get_bl_rev_representation_for();
    const std::string& get_bl_rev_interpart_links();
    const std::string& get_bl_rev_current_revision_id();
    const std::string& get_bl_rev_IMAN_UG_wave_geometry();
    const std::string& get_bl_rev_IMAN_MEMfgModel();
    const std::string& get_bl_rev_interpart_equations();
    const std::string& get_bl_rev_IMAN_UG_wave_part_link();
    const std::string& get_bl_rev_IMAN_UG_altrep();
    const std::string& get_bl_rev_IMAN_3D_snap_shot();
    const std::string& get_bl_rev_mating_constraints();
    const std::string& get_bl_rev_allowable_participant_types();
    const std::string& get_bl_rev_assignable_participant_types();
    const std::string& get_bl_rev_participants();
    const std::string& get_bl_rev_epm_proposed_reviewers();
    const std::string& get_bl_rev_epm_proposed_responsible_party();
    const std::string& get_bl_rev_mvl_text();
    const std::string& get_bl_rev_IMAN_specification();
    const std::string& get_bl_rev_Fnd0ExportContent();
    const std::string& get_bl_rev_EC_solution_item_rel();
    const std::string& get_bl_rev_EC_addressed_by_rel();
    const std::string& get_bl_rev_id_dispdefault();
    const std::string& get_bl_rev_item_id();
    const std::string& get_bl_rev_TC_Generic_Architecture();
    const std::string& get_bl_rev_effectivity_text();
    const std::string& get_bl_rev_IMAN_external_object_link();
    const std::string& get_bl_rev_has_module();
    const std::string& get_bl_rev_altid_list();
    const std::string& get_bl_rev_EC_problem_item_rel();
    const std::string& get_bl_rev_EC_reference_item_rel();
    const std::string& get_bl_rev_has_variants();
    const std::string& get_bl_rev_intent_text();
    const std::string& get_bl_rev_IMAN_UG_wave_position();
    const std::string& get_bl_rev_TC_CAE_Defining();
    const std::string& get_bl_rev_IMAN_classification();
    const std::string& get_bl_rev_IMAN_Rendering();
    const std::string& get_bl_rev_IMAN_master_form_rev();
    const std::string& get_bl_rev_IMAN_UG_expression();
    const std::string& get_bl_rev_IMAN_UG_scenario();
    const std::string& get_bl_rev_TCEng_rdv_plmxml_configured();
    const std::string& get_bl_rev_IMAN_Motion();
    const std::string& get_bl_rev_IMAN_aliasid();
    const std::string& get_bl_rev_TC_CAE_Source();
    const std::string& get_bl_rev_geometric_interfaces();
    const std::string& get_bl_rev_is_vi();
    const std::string& get_bl_rev_IMAN_manifestation();
    const std::string& get_bl_rev_TC_ProductManual();
    const std::string& get_bl_rev_IMAN_Simulation();
    const std::string& get_bl_rev_TC_CAE_Target();
    const std::string& get_bl_rev_TC_WorkContext_Relation();
    const std::string& get_bl_rev_IMAN_reference();
    const std::string& get_bl_rev_TC_CAE_Results();
    const std::string& get_bl_rev_TC_Validation();
    const std::string& get_bl_rev_gc_updated_from_object_string();
    const std::string& get_bl_rev_EC_affected_item_rel();
    const std::string& get_bl_rev_EC_snapshot_rel();
    const std::string& get_bl_rev_IMAN_UG_udf();
    const std::string& get_bl_rev_parametric_interfaces();
    const std::string& get_bl_rev_current_id();
    const std::string& get_bl_rev_TCEng_rdv_plmxml_unconfigured();
    const std::string& get_bl_rev_IMAN_requirement();
    const std::string& get_bl_rev_IMAN_snapshot();
    const std::string& get_bl_rev_IMAN_MEWorkInstruction();
    const std::string& get_bl_rev_current_id_context();
    const std::string& get_bl_rev_current_id_type();
    const std::string& get_bl_rev_current_id_uid();
    const std::string& get_bl_rev_TC_CAE_Criteria();
    const std::string& get_bl_rev_TC_CAE_Include();
    const std::string& get_bl_rev_TC_CAE_Param();
    const std::string& get_bl_rev_BOM_Rollup();
    const std::string& get_bl_rev_TC_Attaches();
    const std::string& get_bl_rev_Thumbnail_Source();
    const std::string& get_bl_rev_TC_sst_record();
    const std::string& get_bl_rev_ContactInCompany();
    const std::string& get_bl_rev_LocationInCompany();
    const std::string& get_bl_rev_HasParticipant();
    const std::string& get_bl_rev_is_IRDC();
    const std::string& get_bl_rev_fms_tickets();
    const std::string& get_bl_rev_VisItemRevCreatedSnapshot2D();
    const std::string& get_bl_rev_Fnd0ListsCustomNotes();
    const std::string& get_bl_rev_Fnd0ListsParamReqments();
    const std::string& get_bl_rev_revision_list();
    const std::string& get_bl_rev_fnd0StructureAuditLogs();
    const std::string& get_bl_rev_ps_children();
    const std::string& get_bl_rev_ps_parents();
    const std::string& get_bl_rev_Fnd0StruObjAttrOverride();
    const std::string& get_bl_rev_VisSession();
    const std::string& get_bl_rev_VisMarkup();
    const std::string& get_bl_rev_SimplifiedRendering();
    const std::string& get_bl_rev_Fnd0SpatialRendering();
    const std::string& get_bl_rev_fnd0derived_default_rules();
    const std::string& get_bl_rev_fnd0IRDCUsed();
    const std::string& get_bl_rev_fnd0fixed_default_rules();
    const std::string& get_bl_rev_fnd0option_groups();
    const std::string& get_bl_rev_fnd0option_values();
    const std::string& get_bl_rev_Fnd0TC_valdata_result();
    const std::string& get_bl_rev_fnd0constraint_rules();
    const std::string& get_bl_rev_CAEAnalysis();
    const std::string& get_bl_rev_MEProcess();
    const std::string& get_bl_rev_MESetup();
    const std::string& get_bl_rev_view();
    const std::string& get_bl_occ_timestamp();
    const std::string& get_bl_occ_pid();
    const std::string& get_bl_occ_object_properties();
    const std::string& get_bl_occ_lsd();
    const std::string& get_bl_occ_owning_site();
    const std::string& get_bl_occ_child_item();
    const std::string& get_bl_occ_alternate_etc_ref();
    const std::string& get_bl_occ_variant_condition();
    const std::string& get_bl_occ_occ_type();
    const std::string& get_bl_occ_used_options();
    const std::string& get_bl_occ_effectivities();
    const std::string& get_bl_occ_seq_no();
    const std::string& get_bl_occ_occurrence_type();
    const std::string& get_bl_occ_order_no();
    const std::string& get_bl_occ_occ_flags();
    const std::string& get_bl_occ_qty_value();
    const std::string& get_bl_occ_cd_indexes();
    const std::string& get_bl_occ_cd_tags();
    const std::string& get_bl_occ_ext_transform_rot00();
    const std::string& get_bl_occ_ext_transform_rot10();
    const std::string& get_bl_occ_ext_transform_rot20();
    const std::string& get_bl_occ_ext_transform_per0();
    const std::string& get_bl_occ_ext_transform_rot01();
    const std::string& get_bl_occ_ext_transform_rot11();
    const std::string& get_bl_occ_ext_transform_rot21();
    const std::string& get_bl_occ_ext_transform_per1();
    const std::string& get_bl_occ_ext_transform_rot02();
    const std::string& get_bl_occ_ext_transform_rot12();
    const std::string& get_bl_occ_ext_transform_rot22();
    const std::string& get_bl_occ_ext_transform_per2();
    const std::string& get_bl_occ_ext_transform_tra0();
    const std::string& get_bl_occ_ext_transform_tra1();
    const std::string& get_bl_occ_ext_transform_tra2();
    const std::string& get_bl_occ_ext_transform_invscale();
    const std::string& get_bl_occ_pred_list();
    const std::string& get_bl_occ_occurrence_name();
    const std::string& get_bl_occ_child_bv();
    const std::string& get_bl_occ_parent_bvr();
    const std::string& get_bl_occ_uom_tag();
    const std::string& get_bl_occ_ref_designator();
    const std::string& get_bl_occ_occ_thread();
    const std::string& get_bl_occ_xform();
    const std::string& get_bl_occ_notes_ref();
    const std::string& get_bl_occ_object_string();
    const std::string& get_bl_occ_fnd0objectId();
    const std::string& get_bl_occ_fnd0mfkinfo();
    const std::string& get_bl_occ_IMAN_based_on();
    const std::string& get_bl_occ_IMAN_MEAppearance();
    const std::string& get_bl_occ_IMAN_MEProductLocation();
    const std::string& get_bl_occ_TC_ProductManual();
    const std::string& get_bl_occ_IMAN_MERequiredAppr();
    const std::string& get_bl_occ_IMAN_MEProductAppearance();
    const std::string& get_bl_occ_IMAN_MEWorkInstruction();
    const std::string& get_bl_occ_mvl_condition();
    const std::string& get_bl_Item_Master_project_id();
    const std::string& get_bl_Item_Master_previous_item_id();
    const std::string& get_bl_Item_Master_serial_number();
    const std::string& get_bl_Item_Master_item_comment();
    const std::string& get_bl_Item_Master_user_data_1();
    const std::string& get_bl_Item_Master_user_data_2();
    const std::string& get_bl_Item_Master_user_data_3();
    const std::string& get_bl_ItemRevision_Master_project_id();
    const std::string& get_bl_ItemRevision_Master_previous_version_id();
    const std::string& get_bl_ItemRevision_Master_serial_number();
    const std::string& get_bl_ItemRevision_Master_item_comment();
    const std::string& get_bl_ItemRevision_Master_user_data_1();
    const std::string& get_bl_ItemRevision_Master_user_data_2();
    const std::string& get_bl_ItemRevision_Master_user_data_3();
    const std::string& get_bl_rev_fnd0rollupAccuracy();
    const std::string& get_bl_rev_fnd0rollupCoMx();
    const std::string& get_bl_rev_fnd0rollupCoMy();
    const std::string& get_bl_rev_fnd0rollupCoMz();
    const std::string& get_bl_rev_fnd0rollupMass();
    const std::string& get_bl_rev_fnd0rollupMoIxx();
    const std::string& get_bl_rev_fnd0rollupMoIyy();
    const std::string& get_bl_rev_fnd0rollupMoIzz();
    const std::string& get_bl_rev_fnd0rollupPoIxy();
    const std::string& get_bl_rev_fnd0rollupPoIxz();
    const std::string& get_bl_rev_fnd0rollupPoIyz();
    const std::string& get_fnd0_bl_rev_owning_site_id();
    const std::string& get_AIE_Exported();
    const std::string& get_AIE_OCC_ID();
    const std::string& get_AIE_OCC_NAME();
    const std::string& get_Fnd0IgnorePartialMat();
    const std::string& get_GCS_CP();
    const std::string& get_MENXNewResourceUid();
    const std::string& get_MEResourceID();
    const std::string& get_MEUILocation();
    const std::string& get_MRM_CompImportIndex();
    const std::string& get_MRM_PSP();
    const std::string& get_MajorFeatureVersion();
    const std::string& get_Mfg0SensorDetRange();
    const std::string& get_MinorFeatureVersion();
    const std::string& get_TEMPLATE_ACTION();
    const std::string& get_UG_ALTREP();
    const std::string& get_UG_ENTITY_HANDLE();
    const std::string& get_UG_GEOMETRY();
    const std::string& get_UG_NAME();
    const std::string& get_UG_REF_SET();
    const std::string& get_Usage_ArchitectureId();
    const std::string& get_Usage_PartNumber();
    const std::string& get_Usage_Product();
    const std::string& get_Usage_Quantity();
    const std::string& get_Mfg0PLCOPCConnection();
    const std::string& get_Mfg0ProductionRate();


   SOA_CLASS_NEW_OPERATORS_WITH_IMPL("MEViewLine")

   virtual ~MEViewLine();
};
            }
        }
    }
}
#include <teamcenter/soa/client/SoaClientMngdUndef.h>
#endif
